@startuml PacTroll

class Game {
    + window: pg.Surface
    + running: bool
    + food_objects: list[Food]
    + obstacles: list[Obstacle]
    + objects: list[GameObject]
    + player: Troll
    # clock: pg.Clock
    --
    # add_food_object: () -> None
    + quit: () -> None
    + run: () -> None
    # handle_events: () -> None
    # handle_game_events: () -> None
    # check_overlap: (other: GameObject) -> None
    # handle_overlap: (other: GameObject) -> None
    # draw_labels: () -> None
    # update_frame: () -> None
    # display_loss: () -> None
}

Game "1" --* "3" Food
Game "1" --* "0..*" Obstacle
Game "1" --* "1" Troll

class GameObject {
    + x: float
    + y: float
    + WIDTH: float
    + HEIGHT: float
    + color: tuple[float, float, float]
    + window: pg.Surface
    --
    + draw: () -> None
    + overlaps_with: (other: GameObject) -> bool
}

class Food extends GameObject {
    
}

class Obstacle extends GameObject {
    + can_kill: bool
}

class Troll extends GameObject {
    + velocity: float
    + direction: Direction
    # direction_stack: list[Direction]
    # last_direction: Direction
    --
    + move: (keys_pressed) -> None
    + accelerate: () -> None
    + add_direction: (direction: Direction) -> None
    + remove_direction: (direction: Direction) -> None
    + is_in_bounds: () -> bool
}

enum Direction {
    left
    right
    up
    down
}

Direction --> Troll

@enduml